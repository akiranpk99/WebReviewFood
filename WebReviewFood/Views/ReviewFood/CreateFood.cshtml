@model WebReviewFood.ViewModels.ReviewFoodViewModel
@{
    ViewBag.Title = "CreateFood";
    Layout = "~/Views/Shared/_mytemplate.cshtml";
}

<link rel="icon" href="@Url.Content("~/Content/mytemplate/")img/core-img/logo.PNG">
<!-- Core Stylesheet -->
<link href="@Url.Content("~/Content/mytemplate/")style.css" rel="stylesheet">

<!-- Responsive CSS -->
<link href="@Url.Content("~/Content/mytemplate/")css/responsive/responsive.css" rel="stylesheet">
<!-- Jquery-2.2.4 js -->
<script src="@Url.Content("~/Content/mytemplate/")js/jquery/jquery-2.2.4.min.js"></script>
<!-- Popper js -->
<script src="@Url.Content("~/Content/mytemplate/")js/bootstrap/popper.min.js"></script>
<!-- Bootstrap-4 js -->
<script src="@Url.Content("~/Content/mytemplate/")js/bootstrap/bootstrap.min.js"></script>
<!-- All Plugins JS -->
<script src="@Url.Content("~/Content/mytemplate/")js/others/plugins.js"></script>
<!-- Active JS -->
<script src="@Url.Content("~/Content/mytemplate/")js/active.js"></script>
<h2 style="text-align:center">CreateFood</h2>
@using (Html.BeginForm("CreateFood", "ReviewFood", null, FormMethod.Post,
                              new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>ReviewFood</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TenBaiReview, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenBaiReview, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenBaiReview, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ThongtinFood, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ThongtinFood, 10, 70, null)
                @Html.ValidationMessageFor(model => model.ThongtinFood, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DanhGiaFood, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DanhGiaFood, 10, 70, null)
                @Html.ValidationMessageFor(model => model.DanhGiaFood, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Category,
                new SelectList(Model.Categories, "Id", "LoaiMonAn"), "", new { @class = "from-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>
        <fieldset>
            <legend>Ảnh Minh họa</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.ImageCover)
            </div>
            <div class="editor-field">
                <input id="ImageCover" title="Upload a product image"
                       type="file" name="file" />
            </div>
        </fieldset>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div class="list-blog single-post d-sm-flex wow fadeInUpBig" data-wow-delay=".2s"
     style="visibility: visible;
                animation-delay: 0.2s;
                animation-name: fadeInUpBig;
                margin: 0 auto;
                ">
    <p class="read-more">
        @Html.ActionLink("Back to List", "IndexListFood")
    </p>
</div>
